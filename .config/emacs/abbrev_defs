;;-*-coding: utf-8;-*-
(define-abbrev-table 'agda2-mode-abbrev-table
  '(
    ("-->" "—→" nil :count 112)
    ("-->>" "—↠" nil :count 34)
    ("->" "→" nil :count 353)
    ("->>" "↠" nil :count 6)
    ("/==" "≢" nil :count 3)
    ("/>" "≯" nil :count 1)
    ("/\\" "∧" nil :count 3)
    ("<=" "≤" nil :count 4)
    ("==" "≡" nil :count 13)
    ("==/" "≢" nil :count 4)
    ("===" "≡" nil :count 2)
    ("=>" "⇒" nil :count 65)
    (">=" "≥" nil :count 1)
    ("?=" "≟" nil :count 2)
    ("\\" "λ" nil :count 3)
    ("\\-" "ƛ" nil :count 108)
    ("^-1" "⁻¹" nil :count 8)
    ("`bn" "`ℕ" nil :count 33)
    ("beta" "β" nil :count 37)
    ("beta-\\-" "β-ƛ" nil :count 11)
    ("beta\\-" "β-ƛ" nil :count 13)
    ("betamu" "β-μ" nil :count 3)
    ("bn" "ℕ" nil :count 3)
    ("dag" "†" nil :count 205)
    ("delta" "δ" nil :count 2)
    ("dot" "·" nil :count 134)
    ("ex" "∃" nil :count 9)
    ("exists" "∃" nil :count 2)
    ("exn" "∄" nil :count 4)
    ("fa" "∀" nil :count 133)
    ("forall" "∀" nil :count 1)
    ("gd" "Δ" nil :count 27)
    ("gg" "Γ" nil :count 302)
    ("in" "∈" nil :count 4)
    ("lambda" "λ" nil :count 2)
    ("lambda-" "ƛ" nil :count 3)
    ("mu" "μ" nil :count 14)
    ("neg" "¬" nil :count 22)
    ("ni" "∋" nil :count 36)
    ("o/" "∅" nil :count 41)
    ("qed" "∎" nil :count 4)
    ("rho" "ρ" nil :count 33)
    ("sigma" "σ" nil :count 57)
    ("u+" "⊎" nil :count 2)
    ("v-\\-" "V-ƛ" nil :count 17)
    ("xi" "ξ" nil :count 28)
    ("xi-suc" "ξ-suc" nil :count 5)
    ("xidot1" "ξ-·₁" nil :count 22)
    ("xidot2" "ξ-·₂" nil :count 12)
    ("|-" "⊢" nil :count 194)
   ))

